{"ast":null,"code":"var _jsxFileName = \"/home/junior_moosa/Downloads/marvel/src/marvel/frontend/src/components/screens/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = e => {\n    setMessage(\"\");\n    e.preventDefault();\n    axios.post(``, {\n      username,\n      password\n    }).then(response => {\n      console.log(response);\n      let data = response;\n      localStorage.setItem(\"user_data\", JSON.stringify(data));\n      navigate(\"/\");\n    }).catch(error => {\n      console.log(error);\n      setMessage(\"No active account found for given Credentials\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"log\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/auth/login/`,\n          className: \"log\",\n          children: \" sign in \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: `/auth/register/`,\n          className: \"log\",\n          children: \" sign up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          class: \"text\",\n          name: \"username\",\n          onChange: e => setUsername(e.target.value),\n          value: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"span\",\n          children: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          class: \"text\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"span\",\n          children: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"checkbox-1-1\",\n          class: \"custom-checkbox\",\n          name: \"keep_signin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"checkbox-1-1\",\n          children: \"Keep me Signed in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"signin\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"T2T1fReLIgeIYntMDPHjrbt+CuI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nconst ErrorMessage = styled.p`\n    font-size:17px;\n    color:red;\n    margin-bottom:25px;\n    text-align:center;\n`;\n_c2 = ErrorMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"ErrorMessage\");","map":{"version":3,"sources":["/home/junior_moosa/Downloads/marvel/src/marvel/frontend/src/components/screens/Login.jsx"],"names":["React","useState","Link","useNavigate","axios","styled","Login","username","setUsername","password","setPassword","message","setMessage","navigate","handleSubmit","e","preventDefault","post","then","response","console","log","data","localStorage","setItem","JSON","stringify","catch","error","target","value","ErrorMessage","p"],"mappings":"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","sourcesContent":["import React, {useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\n\nexport default function Login() {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n    const navigate = useNavigate()\n\n    const handleSubmit = (e) =>{\n        setMessage(\"\")\n        e.preventDefault();\n        axios\n        .post(``, {username , password})\n        .then((response) => {\n            console.log(response);\n            let data = response\n            localStorage.setItem(\"user_data\", JSON.stringify(data))\n            navigate(\"/\")\n        })\n        .catch((error) => {\n            console.log(error);\n            setMessage(\"No active account found for given Credentials\")\n        });\n    }\n\n        return (\n            <>\n                <div class=\"login\">\n                    <div class=\"log\">\n                        <Link to={`/auth/login/`} className=\"log\"> sign in </Link>\n                        <Link to={`/auth/register/`} className=\"log\"> sign up </Link>\n                    </div>\n                    <form onSubmit={handleSubmit}>\n                        <input type=\"text\" class=\"text\" name=\"username\" onChange={(e) => setUsername(e.target.value) } value={username} />\n                        <p className=\"span\">username</p>\n                        <br />\n                        <br />\n                        <input type=\"password\" class=\"text\" name=\"password\" onChange={(e) => setPassword(e.target.value) } value={password} />\n                        <p className=\"span\">password</p>\n                        <br />\n                        <input type=\"checkbox\" id=\"checkbox-1-1\" class=\"custom-checkbox\" name=\"keep_signin\" />\n                        <label for=\"checkbox-1-1\">Keep me Signed in</label>    \n                        <button class=\"signin\">Sign In</button>\n                        <br />\n                        {message && <ErrorMessage>{message}</ErrorMessage>}\n                        <hr />\n                    </form>\n                </div>\n            </>\n        );\n}\n\nconst ErrorMessage = styled.p`\n    font-size:17px;\n    color:red;\n    margin-bottom:25px;\n    text-align:center;\n`"]},"metadata":{},"sourceType":"module"}